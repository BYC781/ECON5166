mean_x = mean(x)
mean_y = mean(y)
abs(mean_x-5)
abs(mean_y-5)
long_list = list()
for (i in 1:1000){
long_list[[i]] <- rchisq(1000, df=5)
names(long_list[i]) <- i
}
graph <- data.frame(chi=long_list[[818]]/10000)
hist_plot <- ggplot(graph, aes(x=chi)) +
geom_histogram(bins = 100) +
stat_function(fun = dchisq, args=list(df=5))
hist_plot
View(graph)
View(graph)
library(ggplot2)
set.seed(8188)
x <- rchisq(100, df=5)
y <- rchisq(10000, df=5)
mean_x = mean(x)
mean_y = mean(y)
abs(mean_x-5)
abs(mean_y-5)
long_list = list()
for (i in 1:1000){
long_list[[i]] <- rchisq(1000, df=5)
names(long_list[i]) <- i
}
graph <- data.frame(chi=long_list[[818]]/1000)
hist_plot <- ggplot(graph, aes(x=chi)) +
geom_histogram(bins = 100) +
stat_function(fun = dchisq, args=list(df=5))
hist_plot
library(ggplot2)
set.seed(8188)
x <- rchisq(100, df=5)
y <- rchisq(10000, df=5)
mean_x = mean(x)
mean_y = mean(y)
abs(mean_x-5)
abs(mean_y-5)
long_list = list()
for (i in 1:1000){
long_list[[i]] <- rchisq(1000, df=5)
names(long_list[i]) <- i
}
graph <- data.frame(chi=long_list[[818]])
hist_plot <- ggplot(graph, aes(x=chi)) +
geom_histogram(bins = 100) +
stat_function(fun = dchisq, args=list(df=5))
hist_plot
library(ggplot2)
set.seed(8188)
x <- rchisq(100, df=5)
y <- rchisq(10000, df=5)
mean_x = mean(x)
mean_y = mean(y)
abs(mean_x-5)
abs(mean_y-5)
long_list = list()
for (i in 1:1000){
long_list[[i]] <- rchisq(1000, df=5)
names(long_list[i]) <- i
}
graph <- data.frame(chi=long_list[[818]])
hist_plot <- ggplot(graph, aes(x=chi, y=..density..)) +
geom_histogram(bins = 100) +
stat_function(fun = dchisq, args=list(df=5))
hist_plot
library(ggplot2)
set.seed(8188)
x <- rchisq(100, df=5)
y <- rchisq(10000, df=5)
mean_x = mean(x)
mean_y = mean(y)
abs(mean_x-5)
abs(mean_y-5)
long_list = list()
for (i in 1:1000){
long_list[[i]] <- rchisq(1000, df=5)
names(long_list[i]) <- i
}
graph <- data.frame(chi=long_list[[818]])
hist_plot <- ggplot(graph, aes(x=chi)) +
geom_histogram(bins = 100, aes(y = ..density..)) +
stat_function(fun = dchisq, args=list(df=5))
hist_plot
library(ggplot2)
set.seed(8188)
x <- rchisq(100, df=5)
y <- rchisq(10000, df=5)
mean_x = mean(x)
mean_y = mean(y)
abs(mean_x-5)
abs(mean_y-5)
long_list = list()
for (i in 1:1000){
long_list[[i]] <- rchisq(1000, df=5)
names(long_list[i]) <- i
}
graph <- data.frame(chi=long_list[[818]])
hist_plot <- ggplot(graph, aes(x=chi)) +
geom_histogram(bins = 100, aes(y = ..density.., alpha = 0.5)) +
stat_function(fun = dchisq, args=list(df=5))
hist_plot
hist_plot <- ggplot(graph, aes(x=chi)) +
geom_histogram(bins = 100, aes(y = ..density..,),alpha = 0.5)) +
hist_plot <- ggplot(graph, aes(x=chi)) +
geom_histogram(bins = 100, aes(y = ..density..,lpha = 0.5)) +
stat_function(fun = dchisq, args=list(df=5))
hist_plot <- ggplot(graph, aes(x=chi)) +
geom_histogram(bins = 100, aes(y = ..density..,alpha = 0.5)) +
stat_function(fun = dchisq, args=list(df=5))
hist_plot <- ggplot(graph, aes(x=chi)) +
geom_histogram(bins = 100, aes(y = ..density..), alpha = 0.5) +
stat_function(fun = dchisq, args=list(df=5))
hist_plot <- ggplot(graph, aes(x=chi)) +
geom_histogram(bins = 100, aes(y = ..density..), alpha = 0.5) +
stat_function(fun = dchisq, args=list(df=5))
hist_plot
plot = data.frame()
for (i in 1:1000){
plot[[i]] <- mean(long_list[[i]])
}
View(plot)
View(graph)
View(long_list)
for (i in 1:1000){
plot[i] <- mean(long_list[[i]])
}
for (i in 1:1000){
plot[[i]] <- mean(rchisq(1000, df=5))
}
plot <- data.frame()
for (i in 1:1000){
plot[[i]] <- mean(rchisq(1000, df=5))
}
a_list = list()
for (i in 1:1000){
a_list[[i]] <- mean(rchisq(1000, df=5))
}
View(a_list)
graph1 <- data.frame(chisqq = a_list)
View(graph1)
graph1 <- data.frame(a_list)
graph1 <- data.frame(,a_list)
a_vec = c()
for (i in 1:1000){
a_vec[i] <- mean(rchisq(1000, df=5))
}
graph1 <- data.frame(a_vec)
View(graph1)
a_vec = c()
for (i in 1:1000){
a_vec[i] <- mean(rchisq(1000, df=5))
}
graph1 <- data.frame(a_vec)
hist_plot1 <- ggplot(graph1, aes(x=a_vec))+
geom_histogram(bins = 100, alpha=.5)
hist_plot1
hist_plot1 <- ggplot(graph1, aes(x=a_vec))+
geom_histogram(bins = 100, alpha=.5, are(y = ..density..))+
stat_function(fun = dnorm)
hist_plot1 <- ggplot(graph1, aes(x=a_vec))+
geom_histogram(bins = 100, alpha=.5, aes(y = ..density..))+
stat_function(fun = dnorm)
hist_plot1
hist_plot1 <- ggplot(z, aes(x=a_vec))+
geom_histogram(bins = 100, alpha=.5, aes(y = ..density..))+
stat_function(fun = dnorm, args=list(mean=5, sigma=5))
a_vec = c()
for (i in 1:1000){
a_vec[i] <- mean(rchisq(1000, df=5))
}
z <- data.frame(a_vec)
hist_plot1 <- ggplot(z, aes(x=a_vec))+
geom_histogram(bins = 100, alpha=.5, aes(y = ..density..))+
stat_function(fun = dnorm, args=list(mean=5, sigma=5))
hist_plot1
z <- data.frame(a_vec)
hist_plot1 <- ggplot(z, aes(x=a_vec))+
geom_histogram(bins = 100, alpha=.5, aes(y = ..density..))+
stat_function(fun = dnorm, args=list(mean=5, sd=5))
hist_plot1
hist_plot1 <- ggplot(z, aes(x=a_vec))+
geom_histogram(bins = 100, alpha=.5, aes(y = ..density..))+
stat_function(fun = dnorm, args=list(mean=5, sd=0.05))
hist_plot1
hist_plot1 <- ggplot(z, aes(x=a_vec))+
geom_histogram(bins = 100, alpha=.5, aes(y = ..density..))+
stat_function(fun = dnorm, args=list(mean=5, sd=0.5))
hist_plot1
hist_plot1 <- ggplot(z, aes(x=a_vec))+
geom_histogram(bins = 100, alpha=.5, aes(y = ..density..))+
stat_function(fun = dnorm, args=list(mean=5, sd=0.005^0.5))
hist_plot1
install.packages(magrittr)
install.packages("magrittr")
library(magrittr)
install.packages("dplyr")
library(install.packages("dplyr"))
library(dplyr)
library(dplyr)
install.packages("SportsAnalytics")
library(SportsAnalytics)
sample(1:20, 10, replace = TRUE)
?t.test
?pbinom
pbinom(15, 100, prob=0.1
,
log
=FALSE)
pbinom(15, 100, prob=0.1
,
log
=FALSE)
pbinom(15, 100, prob=0.1
,
lower.tail
=FALSE)
(
a = c(1,2,3),
x <- list(
a = c(1,2,3),
b = c('uno', 'dos', 'tres')
)
x
?repeat
?sample
x<- sample(TRUE, 50)
x<- sample(50, TRUE)
x<- sample(50, 0)
x
x <- list(
a = c(1,2,3),
b = c('uno', 'dos', 'tres')
)
x <- data.frame(
a = c(1,2,3),
b = c('uno', 'dos', 'tres')
)
range(x)
x <- c(1, 2, 3)
x[2]= 5
?mean
df <- data.frame(
x = c(4, 5, 6),
y = c('one', 'two', 'three')
)
df$x -3
df$x <- df$x -3
scores <- c("45", "23", "50", "90", "80", "75", "65", "67",
"55", "65", "78", "72", "96", "85", "52", "58")
as.numeric(scores)
vectors <- list(
A = c(9, 1, 8, 4, 3),
B = c(7,  3,  4,  4,  1,  1, 10,  8)
)
measures_of_center <- function(x){
c(mean = mean(x), median = median(x))
}
measures_of_center(vectors)
measures_of_center(vectors, A)
apply(vectors, measures_of_center)
?apply
apply(vectors, FUN = measures_of_center)
?with
sapply(vectors, FUN = measures_of_center)
tapply(vectors, FUN = measures_of_center)
mapply(vectors, FUN = measures_of_center)
lapply(vectors, FUN = measures_of_center)
simulator_1 <- function(n){
s <- numeric(n)
x <- runif(n)
s[x >= 0.5] <- 1
s
}
simulator_2 <- function(n){
s <-  numeric(n)
for (i in seq_len(n)){
x <- runif(1)
s[i] <- round(x)
}
s
}
benchmark::benchmark()
dbinom(x=4, size=5, prob=.5) + dbinom(x=5, size=5, prob=.5)
1-dpois(11, 15)
dpois(0,15)
prob <- 0
for (i in 1:10){
prob += dpois(i, 15)
prob <- 0
for (i in 1:10){
prob = prob + dpois(i, 15)
}
print(prob)
qnorm(0.95, mean=1100, sd=7.5)
qnorm(0.95, mean=1100, sd=75)
source("~/.active-rstudio-document", echo=TRUE)
data("sleep")
force(sleep)
head(sleep)
?t.test
I(group)
I(sleep$group)
I(relevel(sleep$group))
I(relevel(sleep$group), 2)
I(relevel(sleep$group,2))
source("~/.active-rstudio-document", echo=TRUE)
t.test(extra ~ I(group), data=sleep, paired=TRUE)
t.test(extra ~ I(relevel(group,2), data=sleep, paired=TRUE)
t.test(extra ~ I(relevel(group,2)), data=sleep, paired=TRUE)
1100 + c(-1, 1)* qt(0.975, 8)/ (30/sqrt(9))
1100 + c(-1, 1)* qt(0.975, 8)* (30/sqrt(9))
for (i in c(2.6, 1.5, 0.3, 2.1)){
print(i)
}
for (i in c(2.6, 1.5, 0.3, 2.1)){
-2 + qt(0.975, 8) * i/3
}
source("~/.active-rstudio-document", echo=TRUE)
for (i in c(2.6, 1.5, 0.3, 2.1)){
result = -2 + qt(0.975, 8) * (i/3)
print(result)
}
sp <- sqrt(9*0.6 + 9*0.68) / 18
3-5 + c(-1, 1)* qt(0.975, 18) * sp * (1/9 + 1/9)^.5
sp <- sqrt((9*0.6 + 9*0.68) / 18)
3-5 + c(-1, 1)* qt(0.975, 18) * sp * (1/9 + 1/9)^.5
sp <- sqrt((9*0.6 + 9*0.68) / 18)
3-5 + c(-1, 1)* qt(0.975, 18) * sp * (1/9 + 1/9)^.5
5-3 + c(-1, 1)* qt(0.975, 18) * sp * (1/9 + 1/9)^.5
sp <- sqrt((99*0.25 + 99*4) / 98)
4-6 + c(-1, 1)* qnorm(0.975) * sp * (1/99 + 1/99)^.5
6-4 + c(-1, 1)* qnorm(0.975) * sp * (1/99 + 1/99)^.5
sp <- sqrt((9*1.5^2 + 9*1.8^2) / 16)
-3-1 + c(-1,1) * qt(0.95, 16) * sp * (1/8 + 1/8)^.5
sp <- sqrt((9*1.5^2 + 9*1.8^2) / 16)
-3-1 + c(-1,1) * qt(0.95, 16) * sp * (1/8 + 1/8)^.5
sp <- sqrt((8*1.5^2 + 8*1.8^2) / 16)
-3-1 + c(-1,1) * qt(0.95, 16) * sp * (1/8 + 1/8)^.5
sp <- sqrt((8*1.5^2 + 8*1.8^2) / 16)
-3-1 + c(-1,1) * qt(0.95, 16) * sp * (1/8 + 1/8)^.5
n1 <- n2 <- 9
x1 <- -3 ##treated
x2 <- 1 ##placebo
s1 <- 1.5 ##treated
s2 <- 1.8 ##placebo
s <- sqrt(((n1 - 1) * s1^2 + (n2 - 1) * s2^2)/(n1 + n2 - 2))
s
sp
(x1 - x2) + c(-1, 1) * qt(0.95, n1 + n2 - 2) * s * sqrt(1/n1 + 1/n2)
-3-1
-3-1 + c(-1,1) * qt(0.95, 16) * sp * (1/9 + 1/9)^.5
6->a
6<-a
getwd()
setwd"/Users/bychen/Desktop/111-1/資料科學與社會研究/ECON5166/final")
setwd("/Users/bychen/Desktop/111-1/資料科學與社會研究/ECON5166/final")
dt <- read.csv('dataset.csv')
View(dt)
new_df <- fastDummies::dummy_cols(dt, select_columns = c('college', 'orientation', 'color', 'face_shape'))
View(new_df)
library(dplyr)
new_df1 <- new_df %>% select(!c(college, orientation, color, face_shape, pic_id))
View(new_df1)
xnam <- paste0("x", 1:25)
fmla <- as.formula(paste("y ~ ", paste(xnam, collapse= "+")))
new_df1.columns
columns(new_df1)
colnames(new_df1)
xnam <- 1:52
new_df1[1]
new_df1[1].head()
new_df1[52]
colnames(new_df1)[1]
colnames(new_df1)[2]
colnames(new_df1)[3]
new_df1 <- new_df %>% select(!c(id,college, orientation, color, face_shape, pic_id))
colnames(new_df1)[1]
xnam <- colnames(new_df1)[1:51]
fmla <- as.formula(paste("y ~ ", paste(xnam, collapse= "+")))
colnames(new_df1)
df2 <-new_df1
df2$swipe <- 1
View(df2)
for (i in df$friend_request){
if (i >= 3){
df2$swipe[i] <- 1
}
else{
df2$swipe[i] <- 0
}
}
for (i in df$friend_request){
print(i)
}
df$friend_request
df2$friend_request
for (i in df2$friend_request){
if (i >= 3){
df2$swipe[i] <- 1
}
else{
df2$swipe[i] <- 0
}
}
View(df2)
colnames(df2)
xnam <- colnames(df2)[c(1:10, 12:15, 17:51)]
fmla <- as.formula(paste("swipe ~ ", paste(xnam, collapse= "+")))
myprobit <- glm(fmla, family = binomial(link = "probit"), data = df2)
summary(myprobit)
xnam <- colnames(df2)[c(1,2,4:10, 12:15, 17:51)]
fmla <- as.formula(paste("swipe ~ ", paste(xnam, collapse= "+")))
df2 <-new_df1
myprobit <- glm(fmla, family = binomial(link = "probit"), data = df2)
dt <- read.csv('dataset.csv')
new_df <- fastDummies::dummy_cols(dt, select_columns = c('college', 'orientation', 'color', 'face_shape'))
library(dplyr)
new_df1 <- new_df %>% select(!c(id,college, orientation, color, face_shape, pic_id))
colnames(df2)
df2 <-new_df1
for (i in df2$friend_request){
if (i >= 3){
df2$swipe[i] <- 1
}
else{
df2$swipe[i] <- 0
}
}
xnam <- colnames(df2)[c(1,2,4:10, 12:15, 17:51)]
colnames(df2)
xnam <- colnames(df2)[c(1,2,4:10, 12:15, 17:51)]
fmla <- as.formula(paste("swipe ~ ", paste(xnam, collapse= "+")))
myprobit <- glm(fmla, family = binomial(link = "probit"), data = df2)
summary(myprobit)
ols_model <- lm(fmla, data = df2)
summary(ols_model)
mylogit <- glm(fmla, family = binomial(link = "logit"), data = df2)
summary(mylogit)
mylogit <- glm(fmla, family = binomial, data = df2)
summary(mylogit)
View(df2)
df2 <-new_df1
for (i in df2$friend_request){
if (i >= 3){
df2$swipe[i] <- 1
}
else if (i <= 2){
df2$swipe[i] <- 0
}
}
View(df2)
d2$friend_request
df2$friend_request
df2$friend_request[df2$friend_request>=3]
df2$friend_request[df2$friend_request<=2]
for (i in df2$friend_request){
print(i)
}
print(i >= 3)
for (i in df2$friend_request){
print(i >= 3)
}
for (i in length(df2)){
if (df2$friend_request[i] >= 3){
df2$swipe[i] <- 1
}
else{
df2$swipe[i] <- 0
}
}
for (i in length(df2)){
if (df2$friend_request[i] >= 3){
df2$swipe[i] <- 1
}
else if (df2$friend_request[i] < 3){
df2$swipe[i] <- 0
}
}
View(df2)
for (i in length(df2)){
print(i)
}
for (i in length(df2)){
print(i)
}
for (i in 1:length(df2)){
print(i)
}
for (i in 1:nrow(df2)){
print(i)
}
df2 <-new_df1
for (i in 1:nrow(df2)){
if (df2$friend_request[i] >= 3){
df2$swipe[i] <- 1
}
else if (df2$friend_request[i] < 3){
df2$swipe[i] <- 0
}
}
mylogit <- glm(fmla, family = binomial, data = df2)
summary(mylogit)
colnames(df2)
xnam <- colnames(df2)[c(4:10, 12:15, 17:24, 46:51, 25:45, 1, 2)]
fmla <- as.formula(paste("swipe ~ ", paste(xnam, collapse= "+")))
mylogit <- glm(fmla, family = binomial, data = df2)
source("~/Desktop/111-1/資料科學與社會研究/ECON5166/final/logit.R", echo=TRUE)
